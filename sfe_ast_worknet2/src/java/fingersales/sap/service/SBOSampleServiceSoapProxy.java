package fingersales.sap.service;

import org.springframework.stereotype.Service;

@Service("SBOSampleService")
public class SBOSampleServiceSoapProxy implements fingersales.sap.service.SBOSampleServiceSoap {
  private String _endpoint = null;
  private fingersales.sap.service.SBOSampleServiceSoap sBOSampleServiceSoap = null;
  
  public SBOSampleServiceSoapProxy() {
    _initSBOSampleServiceSoapProxy();
  }
  
  public SBOSampleServiceSoapProxy(String endpoint) {
    _endpoint = endpoint;
    _initSBOSampleServiceSoapProxy();
  }
  
  private void _initSBOSampleServiceSoapProxy() {
    try {
      sBOSampleServiceSoap = (new fingersales.sap.service.SBOSampleServiceLocator(_endpoint)).getSBOSampleServiceSoap();
      if (sBOSampleServiceSoap != null) {
        if (_endpoint != null)
          ((javax.xml.rpc.Stub)sBOSampleServiceSoap)._setProperty("javax.xml.rpc.service.endpoint.address", _endpoint);
        else
          _endpoint = (String)((javax.xml.rpc.Stub)sBOSampleServiceSoap)._getProperty("javax.xml.rpc.service.endpoint.address");
      }
      
    }
    catch (javax.xml.rpc.ServiceException serviceException) {}
  }
  
  public String getEndpoint() {
    return _endpoint;
  }
  
  public void setEndpoint(String endpoint) {
    _endpoint = endpoint;
    if (sBOSampleServiceSoap != null)
      ((javax.xml.rpc.Stub)sBOSampleServiceSoap)._setProperty("javax.xml.rpc.service.endpoint.address", _endpoint);
    
  }
  
  public fingersales.sap.service.SBOSampleServiceSoap getSBOSampleServiceSoap() {
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    return sBOSampleServiceSoap;
  }
  
  public java.lang.String login(java.lang.String databaseServer, java.lang.String databaseName, java.lang.String databaseType, java.lang.String databaseUsername, java.lang.String databasePassword, java.lang.String companyUsername, java.lang.String companyPassword, java.lang.String language, java.lang.String licenseServer, java.lang.String sPort) throws java.rmi.RemoteException{
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    return sBOSampleServiceSoap.login(databaseServer, databaseName, databaseType, databaseUsername, databasePassword, companyUsername, companyPassword, language, licenseServer, sPort);
  }
  
  public void logout(java.lang.String sessionID) throws java.rmi.RemoteException{
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    sBOSampleServiceSoap.logout(sessionID);
  }
  
  public java.lang.String oStockTransfer_S(java.lang.String sessionID, java.lang.String emp_no, java.lang.String docEntry, java.lang.String docDate, java.lang.String reference2, java.lang.String fromWarehouse, java.lang.String[] sarLineNum, java.lang.String[] sarItemCode, java.lang.String[] sarQuantity, java.lang.String[] sarWarehouseCode, java.lang.String[] sarBatchNumber, java.lang.String[] sarQuantity2, java.lang.String[] sarBaseLineNumber) throws java.rmi.RemoteException{
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    return sBOSampleServiceSoap.oStockTransfer_S(sessionID, emp_no, docEntry, docDate, reference2, fromWarehouse, sarLineNum, sarItemCode, sarQuantity, sarWarehouseCode, sarBatchNumber, sarQuantity2, sarBaseLineNumber);
  }
  
  public java.lang.String oInventoryGenExit_S(java.lang.String sessionID, java.lang.String emp_no, java.lang.String docDate, java.lang.String docDueDate, java.lang.String comments, java.lang.String[] sarLineNum, java.lang.String[] sarItemCode, java.lang.String[] sarQuantity, java.lang.String[] sarWarehouseCode, java.lang.String[] sarAccountCode, java.lang.String[] sarBatchNumber, java.lang.String[] sarQuantity2, java.lang.String[] sarBaseLineNumber2) throws java.rmi.RemoteException{
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    return sBOSampleServiceSoap.oInventoryGenExit_S(sessionID, emp_no, docDate, docDueDate, comments, sarLineNum, sarItemCode, sarQuantity, sarWarehouseCode, sarAccountCode, sarBatchNumber, sarQuantity2, sarBaseLineNumber2);
  }
  
  /*
  public java.lang.String oDocuments_S(java.lang.String sessionID, java.lang.String objectName, java.lang.String emp_no, java.lang.String docNum, java.lang.String docType, java.lang.String handWritten, java.lang.String docDate, java.lang.String docDueDate, java.lang.String cardCode, java.lang.String cardName, java.lang.String address, java.lang.String numAtCard, java.lang.String docCurrency, java.lang.String docRate, java.lang.String docTotal, java.lang.String reference1, java.lang.String reference2, java.lang.String comments, java.lang.String journalMemo, java.lang.String paymentGroupCode, java.lang.String docTime, java.lang.String salesPersonCode, java.lang.String transportationCode, java.lang.String confirmed, java.lang.String importFileNum, java.lang.String summeryType, java.lang.String contactPersonCode, java.lang.String showSCN, java.lang.String series, java.lang.String taxDate, java.lang.String partialSupply, java.lang.String docObjectCode, java.lang.String shipToCode, java.lang.String indicator, java.lang.String federalTaxID, java.lang.String discountPercent, java.lang.String paymentReference, java.lang.String docTotalFc, java.lang.String form1099, java.lang.String box1099, java.lang.String revisionPo, java.lang.String requriedDate, java.lang.String cancelDate, java.lang.String blockDunning, java.lang.String pick, java.lang.String paymentMethod, java.lang.String paymentBlock, java.lang.String paymentBlockEntry, java.lang.String centralBankIndicator, java.lang.String maximumCashDiscount, java.lang.String project, java.lang.String exemptionValidityDateFrom, java.lang.String exemptionValidityDateTo, java.lang.String wareHouseUpdateType, java.lang.String rounding, java.lang.String externalCorrectedDocNum, java.lang.String internalCorrectedDocNum, java.lang.String deferredTax, java.lang.String taxExemptionLetterNum, java.lang.String agentCode, java.lang.String numberOfInstallments, java.lang.String applyTaxOnFirstInstallment, java.lang.String vatDate, java.lang.String documentsOwner, java.lang.String folioPrefixString, java.lang.String folioNumber, java.lang.String documentSubType, java.lang.String BPChannelCode, java.lang.String BPChannelContact, java.lang.String address2, java.lang.String payToCode, java.lang.String manualNumber, java.lang.String useShpdGoodsAct, java.lang.String isPayToBank, java.lang.String payToBankCountry, java.lang.String payToBankCode, java.lang.String payToBankAccountNo, java.lang.String payToBankBranch, java.lang.String BPL_IDAssignedToInvoice, java.lang.String downPayment, java.lang.String reserveInvoice, java.lang.String languageCode, java.lang.String trackingNumber, java.lang.String pickRemark, java.lang.String closingDate, java.lang.String sequenceCode, java.lang.String sequenceSerial, java.lang.String seriesString, java.lang.String subSeriesString, java.lang.String sequenceModel, java.lang.String useCorrectionVATGroup, java.lang.String downPaymentAmount, java.lang.String downPaymentPercentage, java.lang.String downPaymentType, java.lang.String downPaymentAmountSC, java.lang.String downPaymentAmountFC, java.lang.String vatPercent, java.lang.String openingRemarks, java.lang.String closingRemarks, java.lang.String roundingDiffAmount, java.lang.String u_ShipToCd, java.lang.String u_ShipToNm, java.lang.String u_SDCNum, java.lang.String u_SFlag, java.lang.String u_CFlag, java.lang.String u_OK_NO, java.lang.String u_BL_Date, java.lang.String u_BL_NO, java.lang.String u_IN_NO, java.lang.String u_BL_V, java.lang.String u_crptno, java.lang.String u_Return, java.lang.String u_SampleDrftnum, java.lang.String u_CardType, java.lang.String u_DelivCd, java.lang.String u_DelivNm, java.lang.String u_Download, java.lang.String u_VATGB, java.lang.String[] sarLineNum, java.lang.String[] sarItemCode, java.lang.String[] sarItemDescription, java.lang.String[] sarQuantity, java.lang.String[] sarShipDate, java.lang.String[] sarPrice, java.lang.String[] sarPriceAfterVAT, java.lang.String[] sarCurrency, java.lang.String[] sarRate, java.lang.String[] sarDiscountPercent, java.lang.String[] sarVendorNum, java.lang.String[] sarSerialNum, java.lang.String[] sarWarehouseCode, java.lang.String[] sarSalesPersonCode, java.lang.String[] sarCommisionPercent, java.lang.String[] sarTreeType, java.lang.String[] sarAccountCode, java.lang.String[] sarUseBaseUnits, java.lang.String[] sarSupplierCatNum, java.lang.String[] sarCostingCode, java.lang.String[] sarProjectCode, java.lang.String[] sarBarCode, java.lang.String[] sarVatGroup, java.lang.String[] sarHeight1, java.lang.String[] sarHight1Unit, java.lang.String[] sarHeight2, java.lang.String[] sarHeight2Unit, java.lang.String[] sarLengh1, java.lang.String[] sarLengh1Unit, java.lang.String[] sarLengh2, java.lang.String[] sarLengh2Unit, java.lang.String[] sarWeight1, java.lang.String[] sarWeight1Unit, java.lang.String[] sarWeight2, java.lang.String[] sarWeight2Unit, java.lang.String[] sarFactor1, java.lang.String[] sarFactor2, java.lang.String[] sarFactor3, java.lang.String[] sarFactor4, java.lang.String[] sarBaseType, java.lang.String[] sarBaseEntry, java.lang.String[] sarBaseLine, java.lang.String[] sarVolume, java.lang.String[] sarVolumeUnit, java.lang.String[] sarWidth1, java.lang.String[] sarWidth1Unit, java.lang.String[] sarWidth2, java.lang.String[] sarWidth2Unit, java.lang.String[] sarAddress, java.lang.String[] sarTaxCode, java.lang.String[] sarTaxType, java.lang.String[] sarTaxLiable, java.lang.String[] sarBackOrder, java.lang.String[] sarFreeText, java.lang.String[] sarShippingMethod, java.lang.String[] sarCorrectionInvoiceItem, java.lang.String[] sarCorrInvAmountToStock, java.lang.String[] sarCorrInvAmountToDiffAcct, java.lang.String[] sarWTLiable, java.lang.String[] sarDeferredTax, java.lang.String[] sarLineTotal, java.lang.String[] sarTaxPercentagePerRow, java.lang.String[] sarConsumerSalesForecast, java.lang.String[] sarExciseAmount, java.lang.String[] sarCountryOrg, java.lang.String[] sarSWW, java.lang.String[] sarTransactionType, java.lang.String[] sarDistributeExpense, java.lang.String[] sarShipToCode, java.lang.String[] sarRowTotalFC, java.lang.String[] sarCFOPCode, java.lang.String[] sarCSTCode, java.lang.String[] sarUsage, java.lang.String[] sarTaxOnly, java.lang.String[] sarUnitPrice, java.lang.String[] sarLineStatus, java.lang.String[] sarLineType, java.lang.String[] sarCOGSCostingCode, java.lang.String[] sarCOGSAccountCode, java.lang.String[] sarChangeAssemlyBoMWarehouse, java.lang.String[] sarItemDetails, java.lang.String[] sarLocationCode, java.lang.String[] sarActualDeliveryDate, java.lang.String[] sarCostingCode2, java.lang.String[] sarCostingCode3, java.lang.String[] sarCostingCode4, java.lang.String[] sarCostingCode5, java.lang.String[] sarU_Amt, java.lang.String[] sarU_DCRt, java.lang.String[] sarU_SalesDC, java.lang.String[] sarU_SDCAmt, java.lang.String[] sarU_CMDCRt, java.lang.String[] sarU_VATNum, java.lang.String[] sarU_WVAPrice, java.lang.String[] sarU_RVAPrice, java.lang.String[] sarU_SQty, java.lang.String[] sarU_Rate, java.lang.String[] sarU_KPrice, java.lang.String[] sarU_JPrice, java.lang.String[] sarU_JVAPrice, java.lang.String[] sarU_VATName, java.lang.String[] sarU_IDRegNum, java.lang.String[] sarU_Empnum, java.lang.String[] sarManufacturerSerialNumber, java.lang.String[] sarInternalSerialNumber, java.lang.String[] sarExpiryDate, java.lang.String[] sarManufactureDate, java.lang.String[] sarReceptionDate, java.lang.String[] sarWarrantyStart, java.lang.String[] sarWarrantyEnd, java.lang.String[] sarLocation, java.lang.String[] sarNotes, java.lang.String[] sarBatchID, java.lang.String[] sarSystemSerialNumber, java.lang.String[] sarBaseLineNumber, java.lang.String[] sarBatchNumber, java.lang.String[] sarManufacturerSerialNumber2, java.lang.String[] sarInternalSerialNumber2, java.lang.String[] sarExpiryDate2, java.lang.String[] sarManufacturingDate, java.lang.String[] sarAddmisionDate, java.lang.String[] sarLocation2, java.lang.String[] sarNotes2, java.lang.String[] sarQuantity2, java.lang.String[] sarBaseLineNumber2, java.lang.String[] sarTaxId0, java.lang.String[] sarTaxId1, java.lang.String[] sarTaxId2, java.lang.String[] sarTaxId3, java.lang.String[] sarTaxId4, java.lang.String[] sarTaxId5, java.lang.String[] sarTaxId6, java.lang.String[] sarTaxId7, java.lang.String[] sarTaxId8, java.lang.String[] sarTaxId9, java.lang.String[] sarState, java.lang.String[] sarCounty, java.lang.String[] sarIncoterms, java.lang.String[] sarVehicle, java.lang.String[] sarVehicleState, java.lang.String[] sarNFRef, java.lang.String[] sarCarrier, java.lang.String[] sarPackQuantity, java.lang.String[] sarPackDescription, java.lang.String[] sarBrand, java.lang.String[] sarShipUnitNo, java.lang.String[] sarNetWeight, java.lang.String[] sarGrossWeight, java.lang.String[] sarStreetS, java.lang.String[] sarBlockS, java.lang.String[] sarBuildingS, java.lang.String[] sarCityS, java.lang.String[] sarZipCodeS, java.lang.String[] sarCountyS, java.lang.String[] sarStateS, java.lang.String[] sarCountryS, java.lang.String[] sarStreetB, java.lang.String[] sarBlockB, java.lang.String[] sarBuildingB, java.lang.String[] sarCityB, java.lang.String[] sarZipCodeB, java.lang.String[] sarCountyB, java.lang.String[] sarStateB, java.lang.String[] sarCountryB, java.lang.String[] sarImportOrExport) throws java.rmi.RemoteException{
    if (sBOSampleServiceSoap == null)
      _initSBOSampleServiceSoapProxy();
    return sBOSampleServiceSoap.oDocuments_S(sessionID, objectName, emp_no, docNum, docType, handWritten, docDate, docDueDate, cardCode, cardName, address, numAtCard, docCurrency, docRate, docTotal, reference1, reference2, comments, journalMemo, paymentGroupCode, docTime, salesPersonCode, transportationCode, confirmed, importFileNum, summeryType, contactPersonCode, showSCN, series, taxDate, partialSupply, docObjectCode, shipToCode, indicator, federalTaxID, discountPercent, paymentReference, docTotalFc, form1099, box1099, revisionPo, requriedDate, cancelDate, blockDunning, pick, paymentMethod, paymentBlock, paymentBlockEntry, centralBankIndicator, maximumCashDiscount, project, exemptionValidityDateFrom, exemptionValidityDateTo, wareHouseUpdateType, rounding, externalCorrectedDocNum, internalCorrectedDocNum, deferredTax, taxExemptionLetterNum, agentCode, numberOfInstallments, applyTaxOnFirstInstallment, vatDate, documentsOwner, folioPrefixString, folioNumber, documentSubType, BPChannelCode, BPChannelContact, address2, payToCode, manualNumber, useShpdGoodsAct, isPayToBank, payToBankCountry, payToBankCode, payToBankAccountNo, payToBankBranch, BPL_IDAssignedToInvoice, downPayment, reserveInvoice, languageCode, trackingNumber, pickRemark, closingDate, sequenceCode, sequenceSerial, seriesString, subSeriesString, sequenceModel, useCorrectionVATGroup, downPaymentAmount, downPaymentPercentage, downPaymentType, downPaymentAmountSC, downPaymentAmountFC, vatPercent, openingRemarks, closingRemarks, roundingDiffAmount, u_ShipToCd, u_ShipToNm, u_SDCNum, u_SFlag, u_CFlag, u_OK_NO, u_BL_Date, u_BL_NO, u_IN_NO, u_BL_V, u_crptno, u_Return, u_SampleDrftnum, u_CardType, u_DelivCd, u_DelivNm, u_Download, u_VATGB, sarLineNum, sarItemCode, sarItemDescription, sarQuantity, sarShipDate, sarPrice, sarPriceAfterVAT, sarCurrency, sarRate, sarDiscountPercent, sarVendorNum, sarSerialNum, sarWarehouseCode, sarSalesPersonCode, sarCommisionPercent, sarTreeType, sarAccountCode, sarUseBaseUnits, sarSupplierCatNum, sarCostingCode, sarProjectCode, sarBarCode, sarVatGroup, sarHeight1, sarHight1Unit, sarHeight2, sarHeight2Unit, sarLengh1, sarLengh1Unit, sarLengh2, sarLengh2Unit, sarWeight1, sarWeight1Unit, sarWeight2, sarWeight2Unit, sarFactor1, sarFactor2, sarFactor3, sarFactor4, sarBaseType, sarBaseEntry, sarBaseLine, sarVolume, sarVolumeUnit, sarWidth1, sarWidth1Unit, sarWidth2, sarWidth2Unit, sarAddress, sarTaxCode, sarTaxType, sarTaxLiable, sarBackOrder, sarFreeText, sarShippingMethod, sarCorrectionInvoiceItem, sarCorrInvAmountToStock, sarCorrInvAmountToDiffAcct, sarWTLiable, sarDeferredTax, sarLineTotal, sarTaxPercentagePerRow, sarConsumerSalesForecast, sarExciseAmount, sarCountryOrg, sarSWW, sarTransactionType, sarDistributeExpense, sarShipToCode, sarRowTotalFC, sarCFOPCode, sarCSTCode, sarUsage, sarTaxOnly, sarUnitPrice, sarLineStatus, sarLineType, sarCOGSCostingCode, sarCOGSAccountCode, sarChangeAssemlyBoMWarehouse, sarItemDetails, sarLocationCode, sarActualDeliveryDate, sarCostingCode2, sarCostingCode3, sarCostingCode4, sarCostingCode5, sarU_Amt, sarU_DCRt, sarU_SalesDC, sarU_SDCAmt, sarU_CMDCRt, sarU_VATNum, sarU_WVAPrice, sarU_RVAPrice, sarU_SQty, sarU_Rate, sarU_KPrice, sarU_JPrice, sarU_JVAPrice, sarU_VATName, sarU_IDRegNum, sarU_Empnum, sarManufacturerSerialNumber, sarInternalSerialNumber, sarExpiryDate, sarManufactureDate, sarReceptionDate, sarWarrantyStart, sarWarrantyEnd, sarLocation, sarNotes, sarBatchID, sarSystemSerialNumber, sarBaseLineNumber, sarBatchNumber, sarManufacturerSerialNumber2, sarInternalSerialNumber2, sarExpiryDate2, sarManufacturingDate, sarAddmisionDate, sarLocation2, sarNotes2, sarQuantity2, sarBaseLineNumber2, sarTaxId0, sarTaxId1, sarTaxId2, sarTaxId3, sarTaxId4, sarTaxId5, sarTaxId6, sarTaxId7, sarTaxId8, sarTaxId9, sarState, sarCounty, sarIncoterms, sarVehicle, sarVehicleState, sarNFRef, sarCarrier, sarPackQuantity, sarPackDescription, sarBrand, sarShipUnitNo, sarNetWeight, sarGrossWeight, sarStreetS, sarBlockS, sarBuildingS, sarCityS, sarZipCodeS, sarCountyS, sarStateS, sarCountryS, sarStreetB, sarBlockB, sarBuildingB, sarCityB, sarZipCodeB, sarCountyB, sarStateB, sarCountryB, sarImportOrExport);
  }
  */
  
}